- origin = :ciner_question if current_user.admin?
- origin ||= :user_question
- questionable_type = f.object.questionable_type
- questionable_type = questionable_type.to_s
- questionable_movies_class = (questionable_type == 'Movie') ? '' : 'hidden'
- questionable_series_class = (questionable_type == 'Serie') ? '' : 'hidden'
- questionable_professionals_class = (questionable_type == 'Professional') ? '' : 'hidden'
- title = ''

- if !params.blank? && !params[:questionable_type].blank? && params[:questionable_type] == 'Broadcast'
  - broadcast = Broadcast.where(id: params[:questionable_id]).first
  - title = "Notícia: #{broadcast.title}"


- broadcast ||= nil

%h3
  Novo Debate

  = f.object.errors.first.to_s

- if !broadcast.blank?
  .row
    .col-xs-6
      = f.input :questionable_type, collection: [["Notícia", :broadcast]], selected: questionable_type, include_blank: 'Notícia', input_html: { selected: params[:questionable_type], disabled: true }
    .col-xs-6
      .div
        = f.label :broadcast, "Notícia"
        = f.input :questionable_id, label: false, collection: [broadcast], include_blank: "#{broadcast.title}", input_html: { selected: params[:questionable_id], disabled: true }

  = f.hidden_field :questionable_type, value: params[:questionable_type]
  = f.hidden_field :questionable_id, value: params[:questionable_id]
- else
  .row{ data: { questionable: '', tipsy: '' } }
    .col-xs-6{ data: { questionable_select: '' }, title: 'Para debater sobre uma notícia, selecione "Debater" na área de notícias' }
      = f.input :questionable_type, collection: Question.localized_questionable_types, selected: questionable_type

.row
  .col-xs-12
    %div{ data: { limited: '', limit: 90 } }
      = f.input :title, as: :string, label: false, input_html: { value: title, disabled: !title.blank?, placeholder: 'Título do tópico' }, maxlength: 90
      %span.char-counter
        = t('remaining_chars', chars: 90)
      - unless title.blank?
        = f.hidden_field :title, value: title

.row
  .col-xs-12
    %div{ data: { limited: '', limit: 2000 } }
      = f.input :content, as: :text, label: false, input_html: { placeholder: 'Inicie o debate do tópico aqui', rows: 5 }, maxlength: 1000
      %span.char-counter
        = t('remaining_chars', chars: 2000)

.row
  .col-xs-4
    = checkbox_item(f, :spoiler)

= f.hidden_field :user_id, value: current_user.id
= f.hidden_field :origin, value: origin

- if f.object.persisted? && current_user.admin?
  .row
    .col-xs-6
      = f.input :status, collection: Question.localized_detailed_statuses, include_blank: t('.select_status'), input_html: { selected: "approved" }
- else
  = f.hidden_field :status, value: :approved

= render 'shared/form_actions', f: f
