- role = current_role(current_user, request.url)

.row.discussion-item{ class: question_class(question) }
  .col-xs-2.col-sm-1.icone
    %svg.icon-debate
      %use{ "xlink:href": question_icon(question) }
  .col-xs-8.col-sm-5.titulo
    = link_to url_for([role, question]) do
      %h4
        = question.title
    = question_created_at_str(question)
  .col-xs-3.col-sm-2.hidden-xs.comentario
    %span
      = question.comments_count
    comentários
    %br
    %span
      = question.visits_count_str
    visualizações

  .col-xs-4.col-sm-3.hidden-xs.last-comment
    - if question.last_comment
      - object = question.last_comment
      = link_to url_for([role, object.user]) do
        .thumb-user
          %figure
            %img.img-responsive{ src: object.user.avatar }
      .last-user
        %span.vermelho
          Último comentário
        = link_to url_for([role, object.user]) do
          = object.user_name.split(' ').first
        em
        = object.date_str
  - if current_user && (question.user == current_user || current_user.admin?)
    .col-xs-1
      = link_to edit_platform_question_path(question) do
        %i.fa.fa-pencil
      = link_to platform_question_path(question), method: 'delete' do
        %i.fa.fa-trash
