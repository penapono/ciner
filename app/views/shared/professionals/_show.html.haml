- role = current_role(current_user, request.url)
- avatar = image_default_path(professional.avatar, "professional")
- object = professional

- if current_user && current_user.admin?
  .row
    .col-xs-2
      = link_to "/admin/professionals/#{object.id}", method: :delete, class: 'pull-right' do
        %button.btn.btn-login{ style: "width: 100%;" }
          %span.text
            Excluir
          %span.icon.icon-button
    .col-xs-2
      = link_to polymorphic_path([role, object], params: { force_update: true }), class: 'pull-right' do
        %button.btn.btn-login{ style: "width: 100%;" }
          %span.text
            Atualizar
          %span.icon.icon-button

.container
  .row
    .col-xs-12
      .section-pessoal
        .title-separator
          .media
            .media-left.media-middle
              %svg.media-object.icon-title
                %use{"xlink:href" => "#perfil"}
            .media-body.media-middle
              .media-heading.title-section
                Dados Gerais
        .user-profile
          .row
            .col-xs-12.col-sm-3.user-avatar
              %img.img-responsive{ src: avatar, style: 'height: 330px; width: 220px;' }
            .col-xs-12.col-sm-9.user-info
              Nome:
              %span.user-name
                = object.name
              %br
              %br
              Idade:
              %span.user-age
                = object.original_title
              %br
              %br
              Local de Nascimento:
              %span.user-city
                - if object.place_of_birth.blank?
                  \-
                - else
                  = object.place_of_birth
              %br

  .row
    .col-xs-8
      .section-pessoal
        .title-separator
          .media
            .media-left.media-middle
              %svg.media-object.icon-title
                %use{"xlink:href" => "#filme"}
            .media-body.media-middle
              .media-heading.title-section
                Filmografia


  - set_functions = object.set_functions_by_occurrence
  - set_functions.each do |sf|
    - unless sf.blank?
      - set_function = SetFunction.where(id: sf).first
      - unless set_function.blank?
        - slider_movies = object.filmography_for_set_function(sf)

        - if slider_movies.any?
          .row{ data: { slider: { playing: '' } } }
            .col-xs-8
              .section-pessoal
                .title-separator
                  .media
                    .media-body.media-middle
                      .media-heading.title-section
                        = set_function.name

              - if role == :admin
                .row.wine.bold{ style: 'margin-top: 10px; margin-bottom: 15px;' }
                  .col-xs-12
                    TÃ­tulo
                - slider_movies.each do |movie|
                  .row{ style: 'border-bottom: 1px solid #cccccc; margin-bottom: 5px; padding-bottom: 5px' }
                    .col-xs-12
                      = link_to polymorphic_path([role, movie]), target: '_blank' do
                        = movie.title
              - else
                .row
                  - showcase_class ||= 'showcase-poster'
                  - background_color ||= 'parent'

                  / MOVIES THUMB
                  .col-xs-12{ class: showcase_class }
                    .slider-frame{ style: "background-color: #{background_color}" }
                      .btn.prev
                      .btn.next
                      .slider-container
                        - slider_movies.each do |pm|
                          - unless pm.blank?
                            = render 'shared/home/showcase/item', role: role, pm: pm

  .row
    .col-xs-12
      = render 'shared/integrations/broadcasts', object: professional
