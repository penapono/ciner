- role = current_role(current_user, request.url)
- avatar = image_default_path(professional.avatar, "professional")
- object = professional

.container
  .row
    .col-xs-12
      .section-pessoal
        .title-separator
          .media
            .media-left.media-middle
              %svg.media-object.icon-title
                %use{"xlink:href" => "#perfil"}
            .media-body.media-middle
              .media-heading.title-section
                Dados Gerais
        .user-profile
          .row
            .col-xs-12.col-sm-3.user-avatar
              %img.img-responsive{ src: avatar, style: 'height: 330px; width: 220px;' }
            .col-xs-12.col-sm-9.user-info
              Nome:
              %span.user-name
                = object.name
              %br
              %br
              Idade:
              %span.user-age
                = object.original_title
              %br
              %br
              Local de Nascimento:
              %span.user-city
                - if object.place_of_birth.blank?
                  \-
                - else
                  = object.place_of_birth
              %br

  .row
    .col-xs-8
      .section-pessoal
        .title-separator
          .media
            .media-left.media-middle
              %svg.media-object.icon-title
                %use{"xlink:href" => "#filme"}
            .media-body.media-middle
              .media-heading.title-section
                Filmografia


  - set_functions = object.ordered_set_functions
  - set_functions.each do |sf, _v|
    - all = []

    - filmables = []
    - FilmableProfessional.where(professional_id: object.id, set_function_id: sf).each do |filmable_professional|
      - filmables << filmable_professional.filmable

    - if filmables.any?
      .row{ data: { slider: { playing: '' } } }
        .col-xs-8
          .section-pessoal
            .title-separator
              .media
                .media-body.media-middle
                  .media-heading.title-section
                    = SetFunction.find(sf).name

          .row
            - showcase_class ||= 'showcase-poster'
            - background_color ||= 'parent'
            - slider_movies = filmables

            / MOVIES THUMB
            .col-xs-12{ class: showcase_class }
              .slider-frame{ style: "background-color: #{background_color}" }
                .btn.prev
                .btn.next
                .slider-container
                  - slider_movies.each do |pm|
                    - unless pm.blank?
                      = render 'shared/home/showcase/item', role: role, pm: pm

  .row
    .col-xs-12
      = render 'shared/integrations/broadcasts', object: professional
