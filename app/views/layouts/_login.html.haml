- role = current_role(current_user, request.url)

- if current_user
  .col-xs-offset-2.col-xs-8.col-sm-offset-1.col-sm-4.col-md-offset-1.col-md-3{ style: 'height: 130px; margin-top: 20px;' }
    .row{ style: 'margin-top: 15px;' }
      .col-sm-4{ style: 'margin-right: -20px; margin-top: -5px;' }
        - avatar = image_default_path(current_user.avatar.try(:thumb), "user")
        = link_to url_for([role, current_user]) do
          = image_tag(avatar, class: "img-responsive", style: 'width: 60px; height: 60px; margin: auto; margin-top: 10px;' )
      .hidden-xs.hidden-sm
        .col-sm-8
          .welcome
            Olá,
            = link_to url_for([role, current_user]), style: 'box-sizing: border-box; color: rgb(255, 255, 255); font-family: "Montserrat"; font-size: 18.6667px; font-weight: 700; line-height: 26.6667px; margin-top: 20px;' do
              = current_user.name.split(' ').first
          .logout
            - notification_count = current_user.notifications.pending.count
            = link_to url_for([role, :notifications]) do
              = notification_count
              = notification_count == 1 ? "notificação" : "notificações"
            \|
            = link_to 'Sair', destroy_user_session_path, method: :delete
      .hidden-md.hidden-lg.hidden-xl
        .col-sm-8{ style: 'text-align: center' }
          .welcome
            Olá,
            = link_to url_for([role, current_user]), style: 'box-sizing: border-box; color: rgb(255, 255, 255); font-family: "Montserrat"; font-size: 18.6667px; font-weight: 700; line-height: 26.6667px; margin-top: 20px;' do
              = current_user.name.split(' ').first
          .logout
            - notification_count = current_user.notifications.pending.count
            = link_to url_for([role, :notifications]) do
              = notification_count
              = notification_count == 1 ? "notificação" : "notificações"
            \|
            = link_to 'Sair', destroy_user_session_path, method: :delete
- else
  -# #fb-root
  -# :javascript
  -#   (function(d, s, id) {
  -#     var js, fjs = d.getElementsByTagName(s)[0];
  -#     if (d.getElementById(id)) return;
  -#     js = d.createElement(s); js.id = id;
  -#     js.src = 'https://connect.facebook.net/pt_BR/sdk.js#xfbml=1&version=v2.12&appId=902576683257507&autoLogAppEvents=1';
  -#     fjs.parentNode.insertBefore(js, fjs);
  -#   }(document, 'script', 'facebook-jssdk'));
  .row
    .hidden-xs
      .col-xs-offset-2.col-xs-8.col-sm-offset-1.col-sm-4.col-md-offset-1.col-md-3{ style: 'height: 150px;' }
        = simple_form_for(resource, as: resource_name, url: session_path(resource_name)) do |f|
          .form-group
            = f.input :email, label: false, required: false, input_html: { class: 'form-control' }, placeholder: 'e-mail', error: false
          .form-group
            = f.input :password, label: false, required: false, input_html: { class: 'form-control', placeholder: 'senha' }, error: false
          -# .form-group{ style: 'margin-bottom: 5px' }
          -#   = link_to user_facebook_omniauth_authorize_path do
          -#     .fb-login-button{"data-auto-logout-link" => "true", "data-button-type" => "login_with", "data-max-rows" => "1", "data-show-faces" => "false", "data-size" => "medium", "data-use-continue-as" => "false"}
          .form-group
            .hidden
              = f.button :submit, 'Entrar'
            %button.btn.btn-login{:type => "submit"}
              Entrar
              %span.icon.icon-button
            %span.register
              ou
              = link_to new_user_registration_path do
                %strong Seja Ciner
    .hidden-sm.hidden-md.hidden-lg.hidden-xl
      .col-xs-12{ style: 'text-align: center; margin-top: 15px;' }
        = link_to new_user_session_path do
          %button.btn.btn-login{:type => "submit"}
            Entrar
            %span.icon.icon-button
        %span.register
          ou
          = link_to new_user_registration_path do
            %strong Seja Ciner
