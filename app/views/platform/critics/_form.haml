- role = current_role(current_user, request.url)
- filmable_type = params[:filmable_type]
- filmable_type ||= critic.filmable_type
- filmable_class = filmable_type.constantize
- filmable_id = params[:filmable_id]
- filmable_id ||= critic.filmable_id
- filmable = filmable_class.find(filmable_id) rescue Movie.first

- user_filmable_rating = UserFilmableRating.where(filmable: filmable, user: current_user).first

= simple_form_for [role, critic] do |f|
  - rating = user_filmable_rating.rating if user_filmable_rating
  - rating ||= f.object.rating || 1

  %h3
    = filmable.title_str

  .row
    .col-xs-12.col-sm-9
      %div{ data: { limited: '', limit: 10000 } }
        = f.input :content, as: :text, input_html: { rows: 5 }, maxlength: 10000
        %span.char-counter
          = t('remaining_chars', chars: 10000)

    .col-xs-4.col-sm-3
      %div
        = f.input :rating, input_html: { step: 1, min: 1, max: 5, value: rating }
        = checkbox_item(f, :spoiler)
    - if current_user && current_user.admin?
      .col-xs-4
        = checkbox_item(f, :featured)
      .col-xs-4
        = checkbox_item(f, :quick)

  = f.hidden_field :filmable_type, value: params[:filmable_type] || 'Movie'
  = f.hidden_field :filmable_id, value: params[:filmable_id] || nil
  = f.hidden_field :user_id, value: current_user.id
  = f.hidden_field :status, value: :approved
  = f.hidden_field :origin, value: current_user.admin? ? :ciner_critic : :user_critic

  = render 'shared/form_actions', f: f
